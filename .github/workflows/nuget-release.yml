name: Release and Publish NuGet Package

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test Midnight.SOAP.SDK.Tests/Midnight.SOAP.SDK.Tests.csproj --no-build --configuration Release --logger trx

  release:
    name: NuGet Release
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.3.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.1.0
        with:
          updateProjectFiles: true
          configFilePath: ./.github/GitVersion.yml

      - name: Restore dependencies
        run: dotnet restore Midnight.SOAP.SDK/Midnight.SOAP.SDK.csproj

      - name: Build
        run: dotnet build Midnight.SOAP.SDK/Midnight.SOAP.SDK.csproj --configuration Release --no-restore

      - name: Pack NuGet package
        run: dotnet pack Midnight.SOAP.SDK/Midnight.SOAP.SDK.csproj --configuration Release --no-build --output ./nupkg /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }}

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

      - name: Push changes and tags to GitHub
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: main
          tags: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.gitversion.outputs.majorMinorPatch }}
          name: Release v${{ steps.gitversion.outputs.majorMinorPatch }}
          body_path: ./CHANGELOG.md
          files: ./nupkg/*.nupkg
        env:
          GITHUB_TOKEN: ${{ github.token }}